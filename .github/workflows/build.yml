name: Build

on:
  push:
  workflow_dispatch:

env:
  PACT_BROKER_BASE_URL: https://bethtest-3.pact.dius.com.au
  PACT_BROKER_TOKEN: ${{ secrets.PACTFLOW_TOKEN_FOR_CI_CD_WORKSHOP }}
  REACT_APP_API_BASE_URL: http://localhost:8080
  GIT_SHA: ${{ github.sha }}
  GIT_REF: ${{ github.ref }}
  PACT_URL: https://bethtest-3.pact.dius.com.au/pacts/provider/pactflow-example-provider/consumer/pactflow-example-consumer-webhookless/version/${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Install
        run: npm i
      - run: echo "::set-output name=GIT_BRANCH::${GIT_REF:11}"
      - name: Test
        run: make test

  verify:
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    steps:
      - run: docker pull pactfoundation/pact-cli:latest
      - uses: actions/checkout@v2
      - name: Check if verification exists
        id: check
        run: |
          make check_if_verification_exists
          echo "::set-output name=verification_exists::true"
      # If can-i-deploy passes, then the next steps are skipped,
      # because we already have a successful verification
      - uses: actions/checkout@v2
          repository: pactflow/example-provider
        if: check.outputs.verification_exists != 'true'
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
        if: check.outputs.verification_exists != 'true'
      - name: Verify
        if: check.outputs.verification_exists != 'true'
        run: make ci_webhook

  can-i-deploy:
      runs-on: ubuntu-latest
      needs: test
      steps:
        - uses: actions/checkout@v2
        - run: docker pull pactfoundation/pact-cli:latest
        - name: Can I deploy?
          run: TRAVIS_BRANCH=${TRAVIS_BRANCH:11} make can_i_deploy

  # Only deploy from master
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: can-i-deploy
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - run: echo "::set-output name=GIT_BRANCH::${GIT_REF:11}"
      - name: Deploy
        run: GIT_BRANCH=${GIT_REF:11} make deploy
